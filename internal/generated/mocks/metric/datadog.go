// Code generated by MockGen. DO NOT EDIT.
// Source: metric/datadog.go
//
// Generated by this command:
//
//	mockgen -source=metric/datadog.go -destination=internal/generated/mocks/metric/datadog.go
//
// Package mock_metric is a generated GoMock package.
package mock_metric

import (
	reflect "reflect"

	statsd "github.com/DataDog/datadog-go/v5/statsd"
	gomock "go.uber.org/mock/gomock"
)

// MockDatadogMetricsClient is a mock of DatadogMetricsClient interface.
type MockDatadogMetricsClient struct {
	ctrl     *gomock.Controller
	recorder *MockDatadogMetricsClientMockRecorder
}

// MockDatadogMetricsClientMockRecorder is the mock recorder for MockDatadogMetricsClient.
type MockDatadogMetricsClientMockRecorder struct {
	mock *MockDatadogMetricsClient
}

// NewMockDatadogMetricsClient creates a new mock instance.
func NewMockDatadogMetricsClient(ctrl *gomock.Controller) *MockDatadogMetricsClient {
	mock := &MockDatadogMetricsClient{ctrl: ctrl}
	mock.recorder = &MockDatadogMetricsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDatadogMetricsClient) EXPECT() *MockDatadogMetricsClientMockRecorder {
	return m.recorder
}

// GetClient mocks base method.
func (m *MockDatadogMetricsClient) GetClient() statsd.ClientInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClient")
	ret0, _ := ret[0].(statsd.ClientInterface)
	return ret0
}

// GetClient indicates an expected call of GetClient.
func (mr *MockDatadogMetricsClientMockRecorder) GetClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClient", reflect.TypeOf((*MockDatadogMetricsClient)(nil).GetClient))
}

// GetDefaultTags mocks base method.
func (m *MockDatadogMetricsClient) GetDefaultTags() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDefaultTags")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetDefaultTags indicates an expected call of GetDefaultTags.
func (mr *MockDatadogMetricsClientMockRecorder) GetDefaultTags() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDefaultTags", reflect.TypeOf((*MockDatadogMetricsClient)(nil).GetDefaultTags))
}

// GetServiceNamePrefix mocks base method.
func (m *MockDatadogMetricsClient) GetServiceNamePrefix() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetServiceNamePrefix")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetServiceNamePrefix indicates an expected call of GetServiceNamePrefix.
func (mr *MockDatadogMetricsClientMockRecorder) GetServiceNamePrefix() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServiceNamePrefix", reflect.TypeOf((*MockDatadogMetricsClient)(nil).GetServiceNamePrefix))
}
